
diarchy_japanese_regent_succession_score_value = {
	if = {
		# For performance reasons, you'll sometimes check this when you don't have a liege, so we need to check beforehand for error purposes.
		limit = { exists = liege }

		# Fujiwara Regents
		if = {
			limit = {
				liege = { dynasty = dynasty:yamatod001 }
				dynasty = dynasty:yamatod002
				is_female = no
			}
			add = {
				value = monumental_diarch_candidate_gain
				desc = diarch_succession_score.category.circumstances
			}
		}

		# We increase the importance of family if the liege is underage or an imbecile.
		if = {
			limit = {
				liege = {
					OR = {
						is_adult = no
						is_incapable = yes
					}
				}
				any_close_or_extended_family_member = { this = liege }
			}
			# Ruling characters  get a bit less, as they have other duties.
			if = {
				limit = { is_ruler = yes }
				add = {
					value = massive_diarch_candidate_gain
					desc = diarch_succession_score.regency.close_or_extended_family_of_invalid.ruler
				}
			}
			# Whereas non-rulers get a mega-boost, as they can be there all the time
			else = {
				add = {
					value = monumental_diarch_candidate_gain
					desc = diarch_succession_score.regency.close_or_extended_family_of_invalid.non_ruler
				}
			}
		}
		# Familial ties.
		## If you engage in hyper-incest and break your own regency succession, don't come crying to the devs. You have done this to yourself.
		add = {
			desc = diarch_succession_score.category.familial_ties
			# ADD SCORE
			## Is parent of
			if = {
				limit = { is_parent_of = liege }
				add = {
					value = massive_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_parent
				}
			}
			## Is child of
			if = {
				limit = { is_child_of = liege }
				add = {
					value = major_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_child
				}
			}
			## Is sibling of
			if = {
				limit = { is_sibling_of = liege }
				add = {
					value = major_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_sibling
				}
			}
			## Is grandparent of
			if = {
				limit = { is_grandparent_of = liege }
				add = {
					value = medium_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_grandparent
				}
			}
			## Is grandchild of
			if = {
				limit = { is_grandchild_of = liege }
				add = {
					value = minor_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_grandchild
				}
			}
			## Is uncle/aunt of
			if = {
				limit = { is_uncle_or_aunt_of = liege }
				add = {
					value = medium_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_auntuncle
				}
			}
			## Is nibling of
			if = {
				limit = { is_nibling_of = liege }
				add = {
					value = medium_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_nibling
				}
			}
			## Is cousin of
			if = {
				limit = { is_cousin_of = liege }
				add = {
					value = minor_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_cousin
				}
			}
			## Is great grandparent of
			if = {
				limit = { is_great_grandparent_of = liege }
				add = {
					value = minor_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_greatgrandparent
				}
			}
			## Is great grandchild of
			if = {
				limit = { is_great_grandchild_of = liege }
				add = {
					value = miniscule_diarch_candidate_gain
					desc = diarch_succession_score.regency.yourgreat_grandchild
				}
			}
		}
		# Personal ties.
		add = {
			desc = diarch_succession_score.category.personal_ties
			# ADD SCORE
			## Is your heir
			if = {
				limit = {
					exists = liege.primary_heir
					this = liege.primary_heir
				}
				add = {
					value = massive_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_heir
				}
			}
			## Is spouse of
			if = {
				limit = { is_spouse_of = liege }
				add = {
					value = massive_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_spouse
				}
			}
			## Is guardian of
			if = {
				limit = { has_relation_ward = liege }
				add = {
					value = massive_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_ward
				}
			}
			## Has a seat in your council
			if = {
				limit = { is_councillor_of = liege }
				add = {
					value = medium_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_councillor
				}
			}
			## Is powerful vassal of
			if = {
				limit = { is_powerful_vassal = yes }
				add = {
					value = minor_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_powerful_vassal
				}
			}
			## Has positive opinion
			if = {
				limit = {
					opinion = {
						target = liege
						value >= medium_positive_opinion
					}
				}
				add = {
					value = miniscule_diarch_candidate_gain
					desc = diarch_succession_score.regency.likes_you
				}
			}
			## Has positive relationship
			if = {
				limit = {
					has_any_moderate_good_relationship_with_character_trigger = { CHARACTER = liege }
				}
				add = {
					value = minor_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_positive_relation
				}
			}
			# REMOVE SCORE
			## Is your nemesis
			if = {
				limit = {
					has_any_worst_bad_relationship_with_character_trigger = { CHARACTER = liege }
				}
				add = {
					value = major_diarch_candidate_loss
					desc = diarch_succession_score.regency.your_nemesis
				}
			}
			## Has a moderate bad relationship
			if = {
				limit = {
					has_any_only_moderate_bad_relationship_with_character_trigger = { CHARACTER = liege }
				}
				add = {
					value = medium_diarch_candidate_loss
					desc = diarch_succession_score.regency.your_negative_relation
				}
			}
			## Has negative opinion
			if = {
				limit = {
					opinion = {
						target = liege
						value <= medium_negative_opinion
					}
				}
				add = {
					value = miniscule_diarch_candidate_loss
					desc = diarch_succession_score.regency.dislikes_you
				}
			}
		}
		# Societal bonds.
		add = {
			desc = diarch_succession_score.category.societal_bonds
			# ADD SCORE
			## Is in your house
			if = {
				limit = {
					exists = house
					house = liege.house
				}
				add = {
					value = minor_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_house
				}
			}
			## Is in your dynasty
			if = {
				limit = {
					exists = house
					# Filter out same-house chars to avoid double-dipping.
					NOT = { house = liege.house }
					# So we _only_ want same dynasty chars.
					dynasty = liege.dynasty
				}
				add = {
					value = miniscule_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_dynasty
				}
			}
			## Has same faith
			if = {
				limit = { faith = liege.faith }
				add = {
					value = minor_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_faith
				}
			}
			## Is of same culture
			if = {
				limit = { culture = liege.culture }
				add = {
					value = minor_diarch_candidate_gain
					desc = diarch_succession_score.regency.your_culture
				}
			}
		}
		# Royal court.
		if = {
			limit = {
				liege = { has_royal_court = yes }
			}
			add = {
				desc = diarch_succession_score.category.royal_court
				# ADD SCORE
				## Skill for court type.
				### Diplomacy.
				if = {
					limit = {
						liege = { has_court_type = court_diplomatic }
					}
					add = {
						value = diplomacy
						# Then we subtract the baseline so that your skill has to matter.
						subtract = diarchy_succession_court_type_baseline_value
						desc = diarch_succession_score.regency.court_type.diplomacy
					}
				}
				### Martial.
				if = {
					limit = {
						liege = { has_court_type = court_warlike }
					}
					add = {
						value = martial
						# Then we subtract the baseline so that your skill has to matter.
						subtract = diarchy_succession_court_type_baseline_value
						desc = diarch_succession_score.regency.court_type.martial
					}
				}
				### Stewardship.
				if = {
					limit = {
						liege = { has_court_type = court_administrative }
					}
					add = {
						value = stewardship
						# Then we subtract the baseline so that your skill has to matter.
						subtract = diarchy_succession_court_type_baseline_value
						desc = diarch_succession_score.regency.court_type.stewardship
					}
				}
				### Intrigue.
				if = {
					limit = {
						liege = { has_court_type = court_intrigue }
					}
					add = {
						value = intrigue
						# Then we subtract the baseline so that your skill has to matter.
						subtract = diarchy_succession_court_type_baseline_value
						desc = diarch_succession_score.regency.court_type.intrigue
					}
				}
				### Learning.
				if = {
					limit = {
						liege = { has_court_type = court_scholarly }
					}
					add = {
						value = learning
						# Then we subtract the baseline so that your skill has to matter.
						subtract = diarchy_succession_court_type_baseline_value
						desc = diarch_succession_score.regency.court_type.learning
					}
				}
				### Prowess.
				if = {
					limit = {
						liege = { has_court_type = court_tribal }
					}
					add = {
						value = prowess
						# Then we subtract the baseline so that your skill has to matter.
						subtract = diarchy_succession_court_type_baseline_value
						desc = diarch_succession_score.regency.court_type.prowess
					}
				}
				## Speaks court language.
				if = {
					limit = { knows_court_language_of = liege }
					add = {
						value = major_diarch_candidate_gain
						desc = diarch_succession_score.regency.speaks_court_language
					}
				}
			}
		}
		# Traits.
		add = {
			desc = diarch_succession_score.category.traits
			# ADD SCORE
			## Ambitious trait
			if = {
				limit = { has_trait = ambitious }
				add = {
					value = minor_diarch_candidate_gain
					desc = diarch_succession_score.regency.ambitious
				}
			}
			## Diligent trait
			if = {
				limit = { has_trait = diligent }
				add = {
					value = minor_diarch_candidate_gain
					desc = diarch_succession_score.regency.diligent
				}
			}
			# REMOVE SCORE
			## Lazy trait
			if = {
				limit = { has_trait = lazy }
				add = {
					value = minor_diarch_candidate_loss
					desc = diarch_succession_score.regency.lazy
				}
			}
			## Humble trait
			if = {
				limit = { has_trait = humble }
				add = {
					value = minor_diarch_candidate_loss
					desc = diarch_succession_score.regency.humble
				}
			}
			## Content trait
			if = {
				limit = { has_trait = content }
				add = {
					value = minor_diarch_candidate_loss
					desc = diarch_succession_score.regency.content
				}
			}
		}
		# Circumstances.
		add = {
			desc = diarch_succession_score.category.circumstances
			# REMOVE SCORE
			## Has a critical illness
			if = {
				limit = { has_serious_disease_trigger = yes }
				add = {
					value = major_diarch_candidate_loss
					desc = diarch_succession_score.regency.cripplingly_ill
				}
			}
			## Has severe wounds
			if = {
				limit = { has_trait = wounded_3 }
				add = {
					value = medium_diarch_candidate_loss
					desc = diarch_succession_score.regency.badly_wounded
				}
			}
			## Has a criminal reason.
			if = {
				limit = {
					liege = {
						OR = {
							has_imprisonment_reason = root
							has_banish_reason = root
							has_execute_reason = root
							has_revoke_title_reason = root
						}
					}
				}
				add = {
					value = medium_diarch_candidate_loss
					desc = diarch_succession_score.regency.known_criminal
				}
			}
			## Under the age of 25
			if = {
				limit = { age <= 25 }
				add = {
					value = minor_diarch_candidate_loss
					desc = diarch_succession_score.regency.very_young
				}
			}
			## High-stress characters
			if = {
				limit = { stress_level  >= 1 }
				add = {
					value = minor_diarch_candidate_loss
					desc = diarch_succession_score.regency.stressed_out
				}
			}
			## Bastard / Child of Concubine
			if = {
				limit = {
					OR = {
						has_trait = bastard
						has_trait = child_of_concubine
					}
				}
				add = {
					value = miniscule_diarch_candidate_loss
					desc = diarch_succession_score.regency.illegitimate
				}
			}
			## Has a minor illness
			if = {
				limit = { has_trait = ill }
				add = {
					value = miniscule_diarch_candidate_loss
					desc = diarch_succession_score.regency.mildly_ill
				}
			}
			## Has a minor wound
			if = {
				limit = {
					OR = {
						has_trait = wounded_1
						has_trait = wounded_2
					}
				}
				add = {
					value = minor_diarch_candidate_loss
					desc = diarch_succession_score.regency.mildly_wounded
				}
			}
			## Doesn't speak your main language
			### Due to technical constraints, we can currently only check if you speak your liege's culture's language, not if you have any shared languages.
			if = {
				limit = {
					NOR = {
						knows_language_of_culture = liege.culture
						# Exempt family members so that we don't screw wrong-gendered unlanded chars over.
						is_close_or_extended_family_of = liege
					}
				}
				add = {
					value = major_diarch_candidate_loss
					desc = diarch_succession_score.regency.not_speak_language
				}
			}
		}
		# REMOVE CANDIDATES
		## Must be a vassal or in your court
		if = {
			limit = {
				exists = liege
				NOR = {
					is_ruler = yes
					is_courtier_of = liege
					host = liege
				}
			}
			add = {
				value = hard_disable_diarch_candidate_value
				desc = diarch_succession_score.regency.neither_vassal_nor_courtier
			}
		}
		## Must be an adult
		if = {
			limit = { is_adult = no }
			add = {
				value = hard_disable_diarch_candidate_value
				desc = diarch_succession_score.regency.child
			}
		}
		## Must not NOT imprisoned
		if = {
			limit = { is_imprisoned = yes }
			add = {
				value = hard_disable_diarch_candidate_value
				desc = diarch_succession_score.regency.imprisoned
			}
		}
		## Is NOT incapable or infirm
		if = {
			limit = {
				OR = {
					is_incapable = yes
					has_trait = infirm
				}
			}
			add = {
				value = hard_disable_diarch_candidate_value
				desc = diarch_succession_score.regency.incapable_or_infirm
			}
		}
	}
}
