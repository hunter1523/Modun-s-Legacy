namespace = tibetan_struggle

### SYSTEM EVENTS #################################################################
## # Parameter Events
## 0001 - 0010	VIP spontaneous relationship management.
## 0011 - 0040	Struggle VIPs spontaneously develop negative relationships with each other.
## 0041 - 0070	Struggle VIPs spontaneously develop postive relationships with each other.
## # Other Events
## 0501 - 0510	Struggle Intro Events
## 0900 - 0999	Struggle ending decision events
###################################################################################

# Setting AI Intent
tibetan_struggle.0003 = {
	hidden = yes
	scope = none
	scope = struggle

	trigger = { # Should not need this, but, redundancy check! -h
		exists = struggle:tibetan_struggle
		struggle:tibetan_struggle = { any_involved_ruler = { count > 0 } } # For when the conflict is ongoing but nobody is left to fight it
	}

	immediate = {
		# prepare needed variables; they will be destroyed at the end of the immediate
		set_variable = {
			name = agents_for_escalation
			value = 0
		}
		set_variable = {
			name = agents_for_deescalation
			value = 0
		}

		# Go through the characters to distribute them between the potential transitions
		struggle:tibetan_struggle = {
			every_involved_ruler = {
				limit = { is_alive = yes }
				#######################
				# Play cue track
				######################
				if = {
					limit = { is_ai = no }
					play_music_cue = "mx_Struggle_Opening"
				}

				#######################
				# Check existing flags
				######################
				if = {
					limit = { has_character_flag = agenda_towards_escalation }
					root = {
						change_variable = {
							name = agents_for_escalation
							add = 1
						}
					}
				}
				else_if = {
					limit = { has_character_flag = agenda_towards_deescalation }
					root = {
						change_variable = {
							name = agents_for_deescalation
							add = 1
						}
					}
				}
				else = { # Set a flag
					#############################
					# Current Phase: Opportunity
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_tibet_phase_opportunity } }
						random_list = {
							# Working towards Hostility
							# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
							100 = {
								# Odds modifiers
								tibetan_struggle_set_ai_agenda_common_modifiers = {
									PHASE = hostility
									INTENT = escalation
								}

								# Apply effects
								tibetan_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Conciliation
							100 = {
								# Odds modifiers
								tibetan_struggle_set_ai_agenda_common_modifiers = {
									PHASE = conciliation
									INTENT = deescalation
								}

								# Apply effects
								tibetan_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}

					#############################
					# Current Phase: Hostility
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_tibet_phase_hostility } }
						random_list = {
							# Working towards Hostility: it means that the character wants to stay in
							100 = {
								# Odds modifiers
								tibetan_struggle_set_ai_agenda_common_modifiers = {
									PHASE = hostility
									INTENT = escalation
								}

								# Apply effects
								tibetan_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Compromise
							100 = {
								# Odds modifiers
								tibetan_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = deescalation
								}

								# Apply effects
								tibetan_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}

					#############################
					# Current Phase: Compromise
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_tibet_phase_compromise } }
						random_list = {

							# Working towards Opportunity
							100 = {
								# Odds modifiers
								tibetan_struggle_set_ai_agenda_common_modifiers = {
									PHASE = opportunity
									INTENT = escalation
								}

								# Apply effects
								tibetan_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Compromise: they want to stay in the same phase
							100 = {
								# Odds modifiers
								tibetan_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = deescalation
								}

								# Apply effects
								tibetan_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}

					#############################
					# Current Phase: Conciliation
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_tibet_phase_conciliation } }
						random_list = {
							# Working towards Compromise
							100 = {
								# Odds modifiers
								tibetan_struggle_set_ai_agenda_common_modifiers = {
									PHASE = compromise
									INTENT = escalation
								}

								# Apply effects
								tibetan_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
							# Working towards Conciliation: they want to stay in the same phase
							100 = {
								# Odds modifiers
								tibetan_struggle_set_ai_agenda_common_modifiers = {
									PHASE = conciliation
									INTENT = deescalation
								}

								# Apply effects
								tibetan_struggle_apply_ai_agenda_effect = {
									INTENT = deescalation
								}
							}
						}
					}
				}
			}
		}

		# Clean variables
		remove_variable = agents_for_escalation
		remove_variable = agents_for_deescalation
	}
}

# Set AI Intent on join
tibetan_struggle.004 = {
	hidden = yes
	scope = none

	immediate = {
		set_variable = {
			name = agents_for_escalation
			value = 0
		}
		set_variable = {
			name = agents_for_deescalation
			value = 0
		}

		############################
		# Update the variables
		############################
		every_character_struggle = {
			every_involved_ruler = {
				limit = { is_alive = yes }
				if = {
					limit = { has_character_flag = agenda_towards_escalation }
					root = {
						change_variable = {
							name = agents_for_escalation
							add = 1
						}
					}
				}
				else_if = {
					limit = { has_character_flag = agenda_towards_deescalation }
					root = {
						change_variable = {
							name = agents_for_deescalation
							add = 1
						}
					}
				}
			}
		}

		if = {
			limit = {
				NOR = {
					has_character_flag = agenda_towards_escalation
					has_character_flag = agenda_towards_deescalation
				}
			}

			#############################
			# Current Phase: Opportunity
			#############################
			if = {
				limit = { any_character_struggle = { is_struggle_phase = struggle_tibet_phase_opportunity } }
				random_list = {
					# Working towards Hostility
					# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
					100 = {
						# Odds modifiers
						tibetan_struggle_set_ai_agenda_common_modifiers = {
							PHASE = hostility
							INTENT = escalation
						}

						# Apply effects
						tibetan_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Conciliation
					100 = {
						# Odds modifiers
						tibetan_struggle_set_ai_agenda_common_modifiers = {
							PHASE = conciliation
							INTENT = deescalation
						}

						# Apply effects
						tibetan_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}

			#############################
			# Current Phase: Hostility
			#############################
			if = {
				limit = { any_character_struggle = { is_struggle_phase = struggle_tibet_phase_hostility } }
				random_list = {
					# Working towards Hostility: it means that the character wants to stay in
					100 = {
						# Odds modifiers
						tibetan_struggle_set_ai_agenda_common_modifiers = {
							PHASE = hostility
							INTENT = escalation
						}

						# Apply effects
						tibetan_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Compromise
					100 = {
						# Odds modifiers
						tibetan_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = deescalation
						}

						# Apply effects
						tibetan_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}

			#############################
			# Current Phase: Compromise
			#############################
			if = {
				limit = { any_character_struggle = { is_struggle_phase = struggle_tibet_phase_compromise } }
				random_list = {

					# Working towards Opportunity
					100 = {
						# Odds modifiers
						tibetan_struggle_set_ai_agenda_common_modifiers = {
							PHASE = opportunity
							INTENT = escalation
						}

						# Apply effects
						tibetan_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Compromise: they want to stay in the same phase
					100 = {
						# Odds modifiers
						tibetan_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = deescalation
						}

						# Apply effects
						tibetan_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}

			#############################
			# Current Phase: Conciliation
			#############################
			if = {
				limit = { any_character_struggle = { is_struggle_phase = struggle_tibet_phase_conciliation } }
				random_list = {
					# Working towards Compromise
					100 = {
						# Odds modifiers
						tibetan_struggle_set_ai_agenda_common_modifiers = {
							PHASE = compromise
							INTENT = escalation
						}

						# Apply effects
						tibetan_struggle_apply_ai_agenda_effect = {
							INTENT = escalation
						}
					}
					# Working towards Conciliation: they want to stay in the same phase
					100 = {
						# Odds modifiers
						tibetan_struggle_set_ai_agenda_common_modifiers = {
							PHASE = conciliation
							INTENT = deescalation
						}

						# Apply effects
						tibetan_struggle_apply_ai_agenda_effect = {
							INTENT = deescalation
						}
					}
				}
			}
		}

		# Clean variables
		remove_variable = agents_for_escalation
		remove_variable = agents_for_deescalation
	}
}


###################################
# Tibetan Struggle Intro Events
# 0501 - 599
###################################
tibetan_struggle.0501 = { # Fullscreen Intro Event
	type = fullscreen_event
	title = tibetan_struggle.0501.t
	desc = {
		desc = tibetan_struggle.0501.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					any_character_struggle = {
						involvement = involved
						is_struggle_type = tibetan_struggle
					}
				}
				desc = tibetan_struggle.0501.desc.involved
			}
			triggered_desc = {
				trigger = {
					any_character_struggle = {
						involvement = interloper
						is_struggle_type = tibetan_struggle
					}
				}
				desc = tibetan_struggle.0501.desc.interloper
			}
		}
	}
	theme = realm
	trigger = { # we need to prevent this from firing for all players when a new player joins in MP
		is_ai = no
		NOT = { has_character_flag = tibetan_struggle_intro_event_flag }
		tibetan_struggle_character_any_involvement_tibetan_struggle_trigger = yes
 	}
	override_background = { reference = tibetan_struggle_fullscreen_intro }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	widgets = {
		widget = {
 			gui = "event_window_widget_struggle_info"
 			container = "dynamic_content_widget"
 			controller = struggle_info
 			setup_scope = { struggle:tibetan_struggle = { save_scope_as = struggle } }
		}
	}
	immediate = {
		play_music_cue = "mx_Struggle_Opening"
		add_character_flag = tibetan_struggle_intro_event_flag
		save_scope_value_as = {
			name = start
			value = yes
		}
	}
	option = {
		name = tibetan_struggle.0501.a
		clicksound = "event:/DLC/FP2/SFX/UI/tibetan_struggle_start_select"
	}
}

###################################
# Struggle Endings
# by Joe Parkin
# 0900-0912
###################################
tibetan_struggle.0900 = { # Hostility
	type = fullscreen_event
	title = tibetan_struggle.0900.t
	desc = {
	    desc = tibetan_struggle.0900.opening
		desc = tibetan_struggle.0900.desc
	}
	theme = court
	override_background = { reference = tibetan_struggle_fullscreen_hostility }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {
		# Add all involved rulers to a list, for ping event
		play_music_cue = "mx_Struggle_ending_hostility"
		tibetan_struggle_ending_involved_list_effect = yes
		give_nickname = nick_the_conquistador
		dynasty = { add_dynasty_prestige = 10000 }
	}

	# Faith victory
	option = {
		name = tibetan_struggle.0900.a
		if = {
			limit = { exists = house }
			house = {
				add_house_modifier = {
					modifier = tibetan_struggle_hostility_house_faith_modifier
				}
			}
		}
		# Piety reward for faith victory
		add_piety = 1000
		custom_description_no_bullet = { text = tibetan_struggle_house_tt }
		custom_tooltip = tibetan_struggle_hostility_holy_cb_tt
		custom_tooltip = tibetan_struggle_hostility_conversion_holy_tt
		stress_impact = {
			cynical = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = 1
			}
		}
	}

	# Culture victory
	option = {
		name = tibetan_struggle.0900.b
		# Renown reward for culture victory
		if = {
			limit = { exists = house }
			dynasty = { add_dynasty_prestige = 1000 }
			house = {
				add_house_modifier = {
					modifier = tibetan_struggle_hostility_house_culture_modifier
				}
			}
		}
		custom_description_no_bullet = { text = tibetan_struggle_house_tt }
		custom_tooltip = tibetan_struggle_hostility_culture_cb_tt
		custom_tooltip = tibetan_struggle_hostility_conversion_culture_tt
		# All Involved cultures lose acceptance of each other
		custom_tooltip = {
			text = tibetan_struggle_hostility_culture_tt
			tibetan_struggle_hostility_cultural_acceptance_effect = yes
		}
		stress_impact = {
			humble = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
		}
	}

	# Combined victory
	option = {
		name = tibetan_struggle.0900.c
		# Reduced renown and piety rewards for combined
		if = {
			limit = { exists = house }
			house = {
				add_house_modifier = {
					modifier = tibetan_struggle_hostility_house_combined_modifier
					years = 200
				}
			}
		}
		add_prestige = 3000
		custom_description_no_bullet = { text = tibetan_struggle_house_tt }
		custom_tooltip = tibetan_struggle_hostility_holy_cb_tt
		custom_tooltip = culture_parameter_cb_lower_piety_level_requirement
		custom_tooltip = tibetan_struggle_hostility_culture_cb_tt
		custom_tooltip = tibetan_struggle_hostility_conversion_holy_tt
		custom_tooltip = tibetan_struggle_hostility_conversion_culture_tt
		# All Involved cultures lose acceptance of each other
		custom_tooltip = {
			text = tibetan_struggle_hostility_culture_large_tt
			tibetan_struggle_hostility_cultural_acceptance_large_effect = yes
		}
		stress_impact = {
			humble = medium_stress_impact_gain
			cynical = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = 2
				ai_boldness = 1
			}
		}
	}

	after = {
		# End Struggle
		struggle:tibetan_struggle = {
			end_struggle = struggle_tibet_ending_hostility_decision
		}
		# Notify
		every_player = {
			limit = {
				NOT = { this = root }
			}
			trigger_event = tibetan_struggle.0910
		}
	}
}

tibetan_struggle.0910 = {
	type = fullscreen_event
	title = tibetan_struggle.0900.t
	desc = {
		first_valid = {
		    triggered_desc = {
		        trigger = { is_in_list = struggle_involvees }
		        desc = tibetan_struggle.0910.opening.involved
		    }
		    desc = tibetan_struggle.0910.opening
		}
		desc = tibetan_struggle.0910.desc
		first_valid = {
		    triggered_desc = {
		        trigger = {
		        	scope:struggle_ender.house = { has_house_modifier = tibetan_struggle_hostility_house_faith_modifier }
		        }
		        desc = tibetan_struggle.0910.closing.faith
		    }
		    triggered_desc = {
		        trigger = {
		        	scope:struggle_ender.house = { has_house_modifier = tibetan_struggle_hostility_house_culture_modifier }
		        }
		        desc = tibetan_struggle.0910.closing.culture
		    }
		    desc = tibetan_struggle.0910.closing.combined
		}
	}
	theme = court
	override_background = { reference = tibetan_struggle_fullscreen_hostility }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {
		play_music_cue = "mx_Struggle_ending_hostility"
		##### Major Effects #####
		show_as_tooltip = {
			scope:struggle_ender = {
				#dynasty = { add_dynasty_prestige = 10000 }
				tibetan_struggle_hostility_ender_effect = yes
			}
		}
		# Hispania is available!
		custom_tooltip = tibetan_struggle_can_create_empire_of_hispania_tt
		# Choose Holy War boost, Culture War boost, or both
		scope:struggle_ender.house = {
			switch = {
				trigger = has_house_modifier
				tibetan_struggle_hostility_house_faith_modifier = {
					show_as_tooltip = { add_house_modifier = tibetan_struggle_hostility_house_faith_modifier }
					custom_description_no_bullet = { text = tibetan_struggle_house_tt }
					custom_tooltip = tibetan_struggle_hostility_holy_cb_tt
				}
				tibetan_struggle_hostility_house_culture_modifier = {
					show_as_tooltip = { add_house_modifier = tibetan_struggle_hostility_house_culture_modifier }
					custom_description_no_bullet = { text = tibetan_struggle_house_tt }
					custom_tooltip = tibetan_struggle_hostility_culture_cb_tt
					custom_tooltip = tibetan_struggle_hostility_culture_tt
				}
				tibetan_struggle_hostility_house_combined_modifier = {
					show_as_tooltip = { add_house_modifier = tibetan_struggle_hostility_house_combined_modifier }
					custom_description_no_bullet = { text = tibetan_struggle_house_tt }
					custom_tooltip = tibetan_struggle_hostility_holy_cb_tt
					custom_tooltip = tibetan_struggle_hostility_culture_cb_tt
					custom_tooltip = tibetan_struggle_hostility_culture_large_tt
				}
			}
		}
	}

	# Ok
	option = {
		name = {
			text = tibetan_struggle.0910.a
			trigger = { is_in_list = struggle_involvees }
		}
		name = {
			text = tibetan_struggle.0910.b
			trigger = {
				NOT = { is_in_list = struggle_involvees }
			}
		}
	}
}

tibetan_struggle.0901 = { # Compromise
	type = fullscreen_event
	title = tibetan_struggle.0901.t
	desc = {
		desc = tibetan_struggle.0900.opening
		desc = tibetan_struggle.0901.desc
	}
	theme = court
	override_background = { reference = tibetan_struggle_fullscreen_compromise }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {
		play_music_cue = "mx_Struggle_ending_compromise"
		# Independent/Split De Jure Duchies will become De Jure Kingdoms
		if = {
			limit = {
				title:e_tibet = {
					any_in_de_jure_hierarchy = { tibetan_struggle_ending_compromise_independent_duchy_trigger = yes }
				}
			}
			custom_tooltip = {
				text = tibetan_struggle_compromise_create_new_kingdoms_tt
				tibetan_struggle_compromise_duchies_to_kingdoms_effect = yes
			}
		}
		# Move duchies to right kingdoms
		tibetan_struggle_compromise_transfer_duchies_effect = yes
		# Turn kingdoms to empires
		tibetan_struggle_compromise_kingdoms_to_empires_effect = yes
		# distribute small kingdoms
		tibetan_struggle_compromise_distribute_kingdoms_to_neighbouring_empires_effect = yes
		# assign the new title to existing characters
		tibetan_struggle_compromise_distribute_the_actual_titles = yes

		# Set up truces
		tibetan_struggle_compromise_truce_effect = yes

		##### Major Effects #####
		tibetan_struggle_compromise_ender_effect = yes

		# Tooltips!
		tibetan_struggle_compromise_tooltip_effect = yes

		##### Minor Effects #####
		# Self-sufficiency modifiers for each independent realm
		tibetan_struggle_compromise_modifier_rewards_effect = yes
		set_global_variable = {
			name = tibetan_struggle_compromise_ending
			value = yes
		}
		# Add all involved rulers to a list, for ping event
		tibetan_struggle_ending_involved_list_effect = yes
	}

	# Ok
	option = {
		name = tibetan_struggle.0901.a
		if = {
			limit = {
				any_in_list = {
					list = kingdom_empire
					this = root.primary_title
				}
			}
			custom_tooltip = tibetan_struggle.0901.tt
		}
	}

	after = {
		stress_impact = {
			arrogant = medium_stress_impact_gain
		}
		# End Struggle
		struggle:tibetan_struggle = {
			end_struggle = struggle_tibet_ending_compromise_decision
		}
		every_player = {
			limit = {
				NOT = { this = root }
			}
			trigger_event = tibetan_struggle.0911
		}
	}
}

tibetan_struggle.0911 = {
	type = fullscreen_event
	title = tibetan_struggle.0901.t
	desc = {
		first_valid = {
		    triggered_desc = {
		        trigger = { is_in_list = struggle_involvees }
		        desc = tibetan_struggle.0910.opening.involved
		    }
		    desc = tibetan_struggle.0910.opening
		}
		desc = tibetan_struggle.0911.desc
	}
	theme = court
	override_background = { reference = tibetan_struggle_fullscreen_compromise }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {
		play_music_cue = "mx_Struggle_ending_compromise"
		##### Major Effects #####
		show_as_tooltip = {
			scope:struggle_ender = { tibetan_struggle_compromise_ender_effect = yes }
		}
		# Independent/Split De Jure Duchies will become De Jure Kingdoms
		custom_tooltip = tibetan_struggle_compromise_create_new_kingdoms_tt
		# RIP Hispania
		tibetan_struggle_compromise_tooltip_effect = yes

		##### Minor Effects #####
		if = {
			limit = {
				any_in_list = {
					list = kingdom_empire
					OR = {
						this = root.primary_title
						this = root.primary_title.de_jure_liege
						this = root.primary_title.de_jure_liege.de_jure_liege
					}
				}
			}
			custom_tooltip = tibetan_struggle.0901.tt
		}
		if = {
			limit = { is_in_list = struggle_involvees }
			show_as_tooltip = {
				tibetan_struggle_compromise_modifier_rewards_personal_house_effect = yes
				tibetan_struggle_compromise_modifier_rewards_personal_county_effect = yes
			}
		}
	}

	# Ok
	option = {
		name = {
			text = tibetan_struggle.0911.a
			trigger = { is_in_list = struggle_involvees }
		}
		name = {
			text = tibetan_struggle.0910.b
			trigger = {
				NOT = { is_in_list = struggle_involvees }
			}
		}
	}
}

tibetan_struggle.0902 = { # Conciliation
	type = fullscreen_event
	title = tibetan_struggle.0902.t
	desc = {
		first_valid = {
		    triggered_desc = {
		        trigger = {
					culture = {
						OR = {
							this = culture:basque
							any_parent_culture = { this = culture:basque }
							has_cultural_pillar = language_basque
						}
					}
		        }
		        desc = tibetan_struggle.0900.opening.basque
		    }
		    triggered_desc = {
		        trigger = {
					culture = {
						OR = {
							this = culture:andalusian
							any_parent_culture = { this = culture:andalusian }
							has_cultural_pillar = language_arabic
						}
					}
		        }
		        desc = tibetan_struggle.0900.opening.andalusian
		    }
		    triggered_desc = {
		        trigger = {
					culture = { has_cultural_pillar = heritage_iberian }
		        }
		        desc = tibetan_struggle.0900.opening.iberian
		    }
		    desc = tibetan_struggle.0900.opening
		}
		desc = tibetan_struggle.0902.desc
	}
	theme = court
	override_background = { reference = tibetan_fullscreen_conciliation }
	override_sound = { reference = "event:/DLC/tibetan/SFX/UI/tibetan_struggle_ui_intro_end_animate" }

	immediate = {
		play_music_cue = "mx_Struggle_ending_conciliation"
		set_global_variable = {
			name = tibetan_struggle_conciliation_ending
			value = yes
		}
		# Add all involved rulers to a list, for ping event
		tibetan_stuggle_ending_involved_list_effect = yes

		# Add all involved cultures with counties to a list, for marriage and holy war checks
		tibetan_struggle_ending_culture_list_effect = yes

		# Change cultural acceptance
		tibetan_struggle_conciliation_cultural_acceptance_effect = yes

		##### Major Effects #####
		tibetan_struggle_conciliation_ender_effect = yes
		tibetan_struggle_conciliation_tooltip_effect = yes
		tibetan_struggle_conciliation_modifier_rewards_effect = yes
	}

	#
	option = {
		name = tibetan_struggle.0902.a
	}

	after = {
		stress_impact = {
			arrogant = medium_stress_impact_gain
			zealous = medium_stress_impact_gain
		}

		# Notify & End Struggle
		save_scope_as = tibetan_loc_struggle_ender # Loc used to use root, this fixes it
		every_player = {
			limit = { tibetan_does_this_player_care_about_the_fate_of_iberia = yes } # Needs to be checked before the struggle ends due to race condition issues
			add_to_list = player_to_notify # Making a list so stuff is tiggered after the struggle ends, to make extra sure I don't break anything.
		}

		struggle:iberian_struggle = { end_struggle = struggle_iberia_ending_conciliation_decision }
		every_in_list = { # Then we *actually* notify palyers, making sure the struggle has already ended
			list = player_to_notify
			trigger_event = tibetan_struggle.0912
		}
	}
}

tibetan_struggle.0912 = {
	type = fullscreen_event
	title = tibetan_struggle.0902.t
	desc = {
		first_valid = {
		    triggered_desc = {
		        trigger = { is_in_list = struggle_involvees }
		        desc = tibetan_struggle.0910.opening.involved
		    }
		    desc = tibetan_struggle.0910.opening
		}
		desc = tibetan_struggle.0912.desc
	}
	theme = court
	override_background = { reference = tibetan_struggle_fullscreen_conciliation }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {
		play_music_cue = "mx_Struggle_ending_conciliation"
		##### Major Effects #####
		show_as_tooltip = {
			scope:struggle_ender = { tibetan_struggle_conciliation_ender_effect = yes }
		}
		tibetan_struggle_conciliation_tooltip_effect = yes

		##### Minor Effects #####
		# All involved rulers gain diff culture opinion and learn language scheme power
		if = {
			limit = { is_in_list = struggle_involvees }
			show_as_tooltip = { tibetan_struggle_conciliation_modifier_rewards_personal_effect = yes }
		}
	}

	# Ok
	option = {
		name = {
			text = tibetan_struggle.0912.a
			trigger = { is_in_list = struggle_involvees }
		}
		name = {
			text = tibetan_struggle.0910.b
			trigger = {
				NOT = { is_in_list = struggle_involvees }
			}
		}
	}
}
